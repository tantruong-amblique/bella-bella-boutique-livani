{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { firebase } from '../../../firebase';\nimport axios from 'axios';\n\nclass AddProductModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      modal: false,\n      imageUrl: '',\n      imageHoverUrl: '',\n      progress: 0,\n      title: '',\n      type: 'T-Shirt',\n      description: '',\n      offer: true,\n      oldPrice: 0,\n      newPrice: 0,\n      discount: true,\n      discountOff: 0,\n      onSale: true,\n      newProduct: true,\n      previewImage: null,\n      previewImageHover: null\n    });\n\n    _defineProperty(this, \"baseState\", this.state);\n\n    _defineProperty(this, \"resetForm\", () => {\n      this.setState(this.baseState);\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.props.onClick(this.state.modal);\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      if (e.target.files[0]) {\n        let image = e.target.files[0];\n        let reader = new FileReader();\n        reader.readAsDataURL(image);\n\n        reader.onload = () => {\n          // console.log(reader.result);\n          this.setState({\n            previewImage: reader.result\n          });\n        };\n\n        this.handleUpload(image);\n      }\n    });\n\n    _defineProperty(this, \"handleUpload\", image => {\n      const data = new FormData();\n\n      if (image) {\n        data.append('productImage', image, image.name);\n        axios.post('/api/upload', data, {\n          headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n          }\n        }).then(response => {\n          if (200 === response.status) {\n            // If file size is larger than expected.\n            if (response.data.error) {\n              if ('LIMIT_FILE_SIZE' === response.data.error.code) {\n                alert('Max size: 2MB');\n              } else {\n                console.log(response.data); // If not the given file type\n\n                alert(response.data.error);\n              }\n            } else {\n              // Success\n              let fileName = response.data;\n              this.setState({\n                imageUrl: fileName.location\n              });\n              console.log('fileName', fileName.location); // alert( 'File Uploaded', '#3089cf' );\n            }\n          }\n        }).catch(error => {\n          // If another error\n          alert(error, 'red');\n        });\n      } else {\n        // if file not selected throw error\n        alert('Please upload file');\n      }\n    });\n\n    _defineProperty(this, \"handleChangeHover\", e => {\n      if (e.target.files[0]) {\n        let imageHover = e.target.files[0];\n        let reader = new FileReader();\n        reader.readAsDataURL(imageHover);\n\n        reader.onload = () => {\n          // console.log(reader.result);\n          this.setState({\n            previewImageHover: reader.result\n          });\n        };\n\n        this.handleUploadHover(imageHover);\n      }\n    });\n\n    _defineProperty(this, \"handleUploadHover\", imageHover => {\n      const data = new FormData();\n\n      if (imageHover) {\n        data.append('productImageHover', imageHover, imageHover.name);\n        axios.post('/api/upload-hover', data, {\n          headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n          }\n        }).then(response => {\n          if (200 === response.status) {\n            // If file size is larger than expected.\n            if (response.data.error) {\n              if ('LIMIT_FILE_SIZE' === response.data.error.code) {\n                alert('Max size: 2MB');\n              } else {\n                console.log(response.data); // If not the given file type\n                // alert( response.data.error, 'red' );\n              }\n            } else {\n              // Success\n              let fileName = response.data;\n              this.setState({\n                imageHoverUrl: fileName.location\n              }); // console.log( 'fileName', fileName.location );\n              // alert( 'File Uploaded', '#3089cf' );\n            }\n          }\n        }).catch(error => {\n          // If another error\n          alert(error);\n        });\n      } else {\n        // if file not selected throw error\n        alert('Please upload file');\n      }\n    });\n\n    _defineProperty(this, \"addProduct\", e => {\n      e.preventDefault(); // console.log(this.state.imageUrl)\n\n      let {\n        imageUrl,\n        imageHoverUrl,\n        title,\n        type,\n        description,\n        offer,\n        oldPrice,\n        newPrice,\n        discount,\n        discountOff,\n        onSale,\n        newProduct\n      } = this.state;\n      const product = {\n        imageUrl: imageUrl,\n        imageHoverUrl: imageHoverUrl,\n        title: title,\n        type: type,\n        description: description,\n        offer: Boolean(offer),\n        oldPrice: Number(oldPrice),\n        newPrice: Number(newPrice),\n        discount: Boolean(discount),\n        discountOff: Number(discountOff),\n        onSale: Boolean(onSale),\n        newProduct: Boolean(newProduct)\n      };\n\n      if (title != '' || imageUrl != '' || imageHoverUrl != '') {\n        const db = firebase.firestore();\n        const dbOrderRef = db.collection('products');\n        dbOrderRef.add(product).then(() => {\n          // this.props.resetCart();\n          toast.success('Product has been created successfully.', {\n            position: \"bottom-left\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          }); // setTimeout(() => {Router.push('/')},3000);  \n\n          this.closeModal();\n          this.resetForm();\n        });\n      } else {\n        toast.error('Fillup the form', {\n          position: \"bottom-left\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }\n    });\n  }\n\n  render() {\n    let {\n      previewImage,\n      previewImageHover\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: `admin-product-modal ${this.props.active}`\n    }, __jsx(\"div\", {\n      className: \"modal-innter-content\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: this.closeModal\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, __jsx(\"i\", {\n      className: \"bx bx-x\"\n    }))), __jsx(\"div\", {\n      className: \"modal-body\"\n    }, __jsx(\"h3\", null, \"Add Product\"), __jsx(\"form\", {\n      onSubmit: this.addProduct\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Upload your Product image here\"), __jsx(\"div\", {\n      className: \"upload-img\"\n    }, __jsx(\"span\", null, __jsx(\"i\", {\n      className: \"bx bxs-image-add\"\n    }), \"Click here or drop files to upload\"), __jsx(\"input\", {\n      type: \"file\",\n      className: \"form-control-file\",\n      name: \"productImage\",\n      accept: \"image/*\",\n      onChange: this.handleChange\n    })), previewImage ? __jsx(\"div\", {\n      className: \"uploaded-img\"\n    }, __jsx(\"img\", {\n      src: previewImage,\n      alt: \"Image\",\n      className: \"img-thumbnail\"\n    })) : null), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Upload your Product hover image here\"), __jsx(\"div\", {\n      className: \"upload-img\"\n    }, __jsx(\"span\", null, __jsx(\"i\", {\n      className: \"bx bxs-image-add\"\n    }), \"Click here or drop files to upload\"), __jsx(\"input\", {\n      type: \"file\",\n      className: \"form-control-file\",\n      name: \"productImageHover\",\n      onChange: this.handleChangeHover\n    })), previewImageHover ? __jsx(\"div\", {\n      className: \"uploaded-img\"\n    }, __jsx(\"img\", {\n      src: previewImageHover,\n      alt: \"Image\",\n      className: \"img-thumbnail\"\n    })) : null), __jsx(\"h4\", {\n      className: \"title\"\n    }, \"Add your Product description and necessary information from here\"), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.title,\n      onChange: e => this.setState({\n        title: e.target.value\n      })\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Description\"), __jsx(\"textarea\", {\n      className: \"form-control\",\n      value: this.state.description,\n      onChange: e => this.setState({\n        description: e.target.value\n      }),\n      rows: \"3\"\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Price\"), __jsx(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      value: this.state.newPrice,\n      onChange: e => this.setState({\n        newPrice: e.target.value\n      })\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Offer?\"), __jsx(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.setState({\n        offer: e.target.value\n      })\n    }, __jsx(\"option\", {\n      value: \"true\"\n    }, \"Yes\"), __jsx(\"option\", {\n      value: \"false\"\n    }, \"No\"))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Old Price\"), __jsx(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      value: this.state.oldPrice,\n      onChange: e => this.setState({\n        oldPrice: e.target.value\n      })\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"New Product?\"), __jsx(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.setState({\n        newProduct: e.target.value\n      })\n    }, __jsx(\"option\", {\n      value: \"true\"\n    }, \"Yes\"), __jsx(\"option\", {\n      value: \"false\"\n    }, \"No\"))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"On Sale?\"), __jsx(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.setState({\n        onSale: e.target.value\n      })\n    }, __jsx(\"option\", {\n      value: \"true\"\n    }, \"Yes\"), __jsx(\"option\", {\n      value: \"false\"\n    }, \"No\"))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Discount?\"), __jsx(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.setState({\n        discount: e.target.value\n      })\n    }, __jsx(\"option\", {\n      value: \"true\"\n    }, \"Yes\"), __jsx(\"option\", {\n      value: \"false\"\n    }, \"No\"))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Discount In Percent (1 or 10 ...)\"), __jsx(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      value: this.state.discountOff,\n      onChange: e => this.setState({\n        discountOff: e.target.value\n      })\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", null, \"Product Type\"), __jsx(\"select\", {\n      className: \"form-control\",\n      onChange: e => this.setState({\n        type: e.target.value\n      })\n    }, __jsx(\"option\", {\n      value: \"T-Shirt\"\n    }, \"T-Shirt\"), __jsx(\"option\", {\n      value: \"Bags\"\n    }, \"Bags\"), __jsx(\"option\", {\n      value: \"Shoes\"\n    }, \"Shoes\"), __jsx(\"option\", {\n      value: \"Women Clothes\"\n    }, \"Women Clothes\"), __jsx(\"option\", {\n      value: \"medical\"\n    }, \"Medical Equipment\"), __jsx(\"option\", {\n      value: \"grocery\"\n    }, \"Grocery\"), __jsx(\"option\", {\n      value: \"electronics\"\n    }, \"Electronics\"), __jsx(\"option\", {\n      value: \"furniture\"\n    }, \"Furniture\"), __jsx(\"option\", {\n      value: \"jewelry\"\n    }, \"Jewelry\"))), __jsx(\"div\", {\n      className: \"modal-btn\"\n    }, __jsx(\"div\", {\n      className: \"btn optional-btn float-left\",\n      onClick: this.closeModal\n    }, \"Cancel\"), __jsx(\"button\", {\n      className: \"btn default-btn float-right\"\n    }, \"Create Product\")))))));\n  }\n\n}\n\nexport default AddProductModal;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/livani-react-next-ecommerce-template/livani-react/components/Admin/Modals/AddProductModal.js"],"names":["React","Component","toast","firebase","axios","AddProductModal","modal","imageUrl","imageHoverUrl","progress","title","type","description","offer","oldPrice","newPrice","discount","discountOff","onSale","newProduct","previewImage","previewImageHover","state","setState","baseState","props","onClick","e","target","files","image","reader","FileReader","readAsDataURL","onload","result","handleUpload","data","FormData","append","name","post","headers","_boundary","then","response","status","error","code","alert","console","log","fileName","location","catch","imageHover","handleUploadHover","preventDefault","product","Boolean","Number","db","firestore","dbOrderRef","collection","add","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","closeModal","resetForm","render","active","addProduct","handleChange","handleChangeHover","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { firebase } from '../../../firebase';\nimport axios from 'axios';\n\nclass AddProductModal extends Component {\n\n    state = {\n        modal: false,\n        imageUrl: '',\n        imageHoverUrl: '',\n        progress: 0,\n        title: '',\n        type: 'T-Shirt',\n        description: '',\n        offer: true,\n        oldPrice: 0,\n        newPrice: 0,\n        discount: true,\n        discountOff: 0,\n        onSale: true,\n        newProduct: true,\n        previewImage: null,\n        previewImageHover: null\n    };\n\n    baseState = this.state \n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n    closeModal = () => {\n        this.props.onClick(this.state.modal);\n    }\n\n    handleChange = (e) => {\n        if(e.target.files[0]){\n            let image = e.target.files[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(image);\n            reader.onload = () => {\n                // console.log(reader.result);\n                this.setState({ previewImage: reader.result})\n            }\n            this.handleUpload(image);\n        }\n    }\n\n    handleUpload = (image) => {\n        const data = new FormData();\n        if ( image ) {\n            data.append( 'productImage', image, image.name );\n            axios.post( '/api/upload', data, {\n                headers: {\n                    'accept': 'application/json',\n                    'Accept-Language': 'en-US,en;q=0.8',\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                }\n            })\n            .then( ( response ) => {\n                if ( 200 === response.status ) {\n                    // If file size is larger than expected.\n                    if( response.data.error ) {\n                        if ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\n                            alert( 'Max size: 2MB' );\n                        } else {\n                            console.log( response.data );\n                            // If not the given file type\n                            alert( response.data.error );\n                        }\n                    } else {\n                        // Success\n                        let fileName = response.data;\n                        this.setState({\n                            imageUrl: fileName.location\n                        })\n                        console.log( 'fileName', fileName.location );\n                        // alert( 'File Uploaded', '#3089cf' );\n                    }\n                }\n            }).catch( ( error ) => {\n                // If another error\n                alert( error, 'red' );\n            });\n        } else {\n            // if file not selected throw error\n            alert( 'Please upload file' );\n        }\n    }\n\n    handleChangeHover = (e) => {\n        if(e.target.files[0]){\n            let imageHover = e.target.files[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(imageHover);\n            reader.onload = () => {\n                // console.log(reader.result);\n                this.setState({ previewImageHover: reader.result})\n            }\n            this.handleUploadHover(imageHover);\n        }\n    }\n\n    handleUploadHover = (imageHover) => {\n        const data = new FormData();\n        if ( imageHover ) {\n            data.append( 'productImageHover', imageHover, imageHover.name );\n            axios.post( '/api/upload-hover', data, {\n                headers: {\n                    'accept': 'application/json',\n                    'Accept-Language': 'en-US,en;q=0.8',\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                }\n            })\n            .then( ( response ) => {\n                if ( 200 === response.status ) {\n                    // If file size is larger than expected.\n                    if( response.data.error ) {\n                        if ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\n                            alert( 'Max size: 2MB' );\n                        } else {\n                            console.log( response.data );\n                            // If not the given file type\n                            // alert( response.data.error, 'red' );\n                        }\n                    } else {\n                        // Success\n                        let fileName = response.data;\n                        this.setState({\n                            imageHoverUrl: fileName.location\n                        })\n                        // console.log( 'fileName', fileName.location );\n                        // alert( 'File Uploaded', '#3089cf' );\n                    }\n                }\n            }).catch( ( error ) => {\n                // If another error\n                alert( error );\n            });\n        } else {\n            // if file not selected throw error\n            alert( 'Please upload file' );\n        }\n    }\n\n    addProduct = (e) => {\n        e.preventDefault();\n        // console.log(this.state.imageUrl)\n        let { \n            imageUrl, imageHoverUrl, \n            title, type, description, \n            offer, oldPrice, newPrice, \n            discount, discountOff, onSale, newProduct\n        } = this.state;\n        const product = {\n            imageUrl: imageUrl,\n            imageHoverUrl: imageHoverUrl,\n            title: title,\n            type: type,\n            description: description,\n            offer: Boolean(offer),\n            oldPrice: Number(oldPrice),\n            newPrice: Number(newPrice),\n            discount: Boolean(discount),\n            discountOff: Number(discountOff),\n            onSale: Boolean(onSale),\n            newProduct: Boolean(newProduct)\n        };\n        if(title != '' || imageUrl != '' || imageHoverUrl != ''){\n            const db = firebase.firestore();\n            const dbOrderRef = db.collection('products');\n            dbOrderRef.add(product).then(() => {\n                // this.props.resetCart();\n                toast.success('Product has been created successfully.', {\n                    position: \"bottom-left\",\n                    autoClose: 3000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true\n                });\n                // setTimeout(() => {Router.push('/')},3000);  \n                this.closeModal();\n                this.resetForm()\n            });\n        } else {\n            toast.error('Fillup the form', {\n                position: \"bottom-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n        }\n    }\n\n    render() {\n        let { previewImage, previewImageHover } = this.state;\n        return (\n            <React.Fragment>\n                <div className={`admin-product-modal ${this.props.active}`}> \n                    <div className=\"modal-innter-content\">\n                        <button type=\"button\" className=\"close\" onClick={this.closeModal}>\n                            <span aria-hidden=\"true\">\n                                <i className='bx bx-x'></i>\n                            </span>\n                        </button>\n\n                        <div className=\"modal-body\">\n                            <h3>Add Product</h3>\n\n                            <form onSubmit={this.addProduct}>\n                                <div className=\"form-group\">\n                                    <label>Upload your Product image here</label>\n                                    <div className=\"upload-img\">\n                                        <span>\n                                            <i className='bx bxs-image-add'></i>\n                                            Click here or drop files to upload \n                                        </span>\n\n                                        <input \n                                            type=\"file\" \n                                            className=\"form-control-file\"\n                                            name=\"productImage\"\n                                            accept=\"image/*\"\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n\n                                    {\n                                        previewImage ? (\n                                        <div className=\"uploaded-img\">\n                                            <img src={previewImage} alt=\"Image\" className=\"img-thumbnail\" />\n                                        </div>\n                                        ) : null\n                                    }\n                                </div>\n \n                                <div className=\"form-group\">\n                                    <label>Upload your Product hover image here</label>\n                                    <div className=\"upload-img\">\n                                        <span>\n                                            <i className='bx bxs-image-add'></i>\n                                            Click here or drop files to upload \n                                        </span>\n\n                                        <input \n                                            type=\"file\" \n                                            className=\"form-control-file\"\n                                            name=\"productImageHover\"\n                                            onChange={this.handleChangeHover}\n                                        />\n                                    </div>\n\n                                    {\n                                        previewImageHover ? (\n                                        <div className=\"uploaded-img\">\n                                            <img src={previewImageHover} alt=\"Image\" className=\"img-thumbnail\" />\n                                        </div>\n                                        ) : null\n                                    }\n                                </div>\n\n                                \n\n                                <h4 className=\"title\">Add your Product description and necessary information from here</h4>\n                                \n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        value={this.state.title}\n                                        onChange={e => this.setState({title: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <textarea \n                                        className=\"form-control\" \n                                        value={this.state.description}\n                                        onChange={e => this.setState({description: e.target.value})}\n                                        rows=\"3\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input \n                                        type=\"number\" \n                                        className=\"form-control\" \n                                        value={this.state.newPrice}\n                                        onChange={e => this.setState({newPrice: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Offer?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({offer: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Old Price</label>\n                                    <input \n                                        type=\"number\" \n                                        className=\"form-control\" \n                                        value={this.state.oldPrice}\n                                        onChange={e => this.setState({oldPrice: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>New Product?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({newProduct: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>On Sale?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({onSale: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Discount?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({discount: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Discount In Percent (1 or 10 ...)</label>\n                                    <input \n                                        type=\"number\" \n                                        className=\"form-control\" \n                                        value={this.state.discountOff}\n                                        onChange={e => this.setState({discountOff: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Product Type</label>\n                                    <select \n                                        className=\"form-control\" \n                                        onChange={e => this.setState({type: e.target.value})}\n                                    >\n                                        <option value=\"T-Shirt\">T-Shirt</option>\n                                        <option value=\"Bags\">Bags</option>\n                                        <option value=\"Shoes\">Shoes</option>\n                                        <option value=\"Women Clothes\">Women Clothes</option>\n                                        <option value=\"medical\">Medical Equipment</option>\n                                        <option value=\"grocery\">Grocery</option>\n                                        <option value=\"electronics\">Electronics</option>\n                                        <option value=\"furniture\">Furniture</option>\n                                        <option value=\"jewelry\">Jewelry</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"modal-btn\">\n                                    <div className=\"btn optional-btn float-left\" onClick={this.closeModal}>Cancel</div>\n                                    <button className=\"btn default-btn float-right\">Create Product</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AddProductModal;"]},"metadata":{},"sourceType":"module"}