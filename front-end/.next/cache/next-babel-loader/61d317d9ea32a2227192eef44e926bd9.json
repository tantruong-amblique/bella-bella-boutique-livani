{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { firebase } from '../../../firebase';\nimport axios from 'axios';\n\nvar AddProductModal = /*#__PURE__*/function (_Component) {\n  _inherits(AddProductModal, _Component);\n\n  var _super = _createSuper(AddProductModal);\n\n  function AddProductModal() {\n    var _this;\n\n    _classCallCheck(this, AddProductModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      modal: false,\n      imageUrl: '',\n      imageHoverUrl: '',\n      progress: 0,\n      title: '',\n      type: 'T-Shirt',\n      description: '',\n      offer: true,\n      oldPrice: 0,\n      newPrice: 0,\n      discount: true,\n      discountOff: 0,\n      onSale: true,\n      newProduct: true,\n      previewImage: null,\n      previewImageHover: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"baseState\", _this.state);\n\n    _defineProperty(_assertThisInitialized(_this), \"resetForm\", function () {\n      _this.setState(_this.baseState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.props.onClick(_this.state.modal);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n        var reader = new FileReader();\n        reader.readAsDataURL(image);\n\n        reader.onload = function () {\n          // console.log(reader.result);\n          _this.setState({\n            previewImage: reader.result\n          });\n        };\n\n        _this.handleUpload(image);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpload\", function (image) {\n      var data = new FormData();\n\n      if (image) {\n        data.append('productImage', image, image.name);\n        axios.post('/api/upload', data, {\n          headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': \"multipart/form-data; boundary=\".concat(data._boundary)\n          }\n        }).then(function (response) {\n          if (200 === response.status) {\n            // If file size is larger than expected.\n            if (response.data.error) {\n              if ('LIMIT_FILE_SIZE' === response.data.error.code) {\n                alert('Max size: 2MB');\n              } else {\n                console.log(response.data); // If not the given file type\n\n                alert(response.data.error);\n              }\n            } else {\n              // Success\n              var fileName = response.data;\n\n              _this.setState({\n                imageUrl: fileName.location\n              });\n\n              console.log('fileName', fileName.location); // alert( 'File Uploaded', '#3089cf' );\n            }\n          }\n        })[\"catch\"](function (error) {\n          // If another error\n          alert(error, 'red');\n        });\n      } else {\n        // if file not selected throw error\n        alert('Please upload file');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeHover\", function (e) {\n      if (e.target.files[0]) {\n        var imageHover = e.target.files[0];\n        var reader = new FileReader();\n        reader.readAsDataURL(imageHover);\n\n        reader.onload = function () {\n          // console.log(reader.result);\n          _this.setState({\n            previewImageHover: reader.result\n          });\n        };\n\n        _this.handleUploadHover(imageHover);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUploadHover\", function (imageHover) {\n      var data = new FormData();\n\n      if (imageHover) {\n        data.append('productImageHover', imageHover, imageHover.name);\n        axios.post('/api/upload-hover', data, {\n          headers: {\n            'accept': 'application/json',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': \"multipart/form-data; boundary=\".concat(data._boundary)\n          }\n        }).then(function (response) {\n          if (200 === response.status) {\n            // If file size is larger than expected.\n            if (response.data.error) {\n              if ('LIMIT_FILE_SIZE' === response.data.error.code) {\n                alert('Max size: 2MB');\n              } else {\n                console.log(response.data); // If not the given file type\n                // alert( response.data.error, 'red' );\n              }\n            } else {\n              // Success\n              var fileName = response.data;\n\n              _this.setState({\n                imageHoverUrl: fileName.location\n              }); // console.log( 'fileName', fileName.location );\n              // alert( 'File Uploaded', '#3089cf' );\n\n            }\n          }\n        })[\"catch\"](function (error) {\n          // If another error\n          alert(error);\n        });\n      } else {\n        // if file not selected throw error\n        alert('Please upload file');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addProduct\", function (e) {\n      e.preventDefault(); // console.log(this.state.imageUrl)\n\n      var _this$state = _this.state,\n          imageUrl = _this$state.imageUrl,\n          imageHoverUrl = _this$state.imageHoverUrl,\n          title = _this$state.title,\n          type = _this$state.type,\n          description = _this$state.description,\n          offer = _this$state.offer,\n          oldPrice = _this$state.oldPrice,\n          newPrice = _this$state.newPrice,\n          discount = _this$state.discount,\n          discountOff = _this$state.discountOff,\n          onSale = _this$state.onSale,\n          newProduct = _this$state.newProduct;\n      var product = {\n        imageUrl: imageUrl,\n        imageHoverUrl: imageHoverUrl,\n        title: title,\n        type: type,\n        description: description,\n        offer: Boolean(offer),\n        oldPrice: Number(oldPrice),\n        newPrice: Number(newPrice),\n        discount: Boolean(discount),\n        discountOff: Number(discountOff),\n        onSale: Boolean(onSale),\n        newProduct: Boolean(newProduct)\n      };\n\n      if (title != '' || imageUrl != '' || imageHoverUrl != '') {\n        var db = firebase.firestore();\n        var dbOrderRef = db.collection('products');\n        dbOrderRef.add(product).then(function () {\n          // this.props.resetCart();\n          toast.success('Product has been created successfully.', {\n            position: \"bottom-left\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          }); // setTimeout(() => {Router.push('/')},3000);  \n\n          _this.closeModal();\n\n          _this.resetForm();\n        });\n      } else {\n        toast.error('Fillup the form', {\n          position: \"bottom-left\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(AddProductModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          previewImage = _this$state2.previewImage,\n          previewImageHover = _this$state2.previewImageHover;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"admin-product-modal \".concat(this.props.active)\n      }, __jsx(\"div\", {\n        className: \"modal-innter-content\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        onClick: this.closeModal\n      }, __jsx(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, __jsx(\"i\", {\n        className: \"bx bx-x\"\n      }))), __jsx(\"div\", {\n        className: \"modal-body\"\n      }, __jsx(\"h3\", null, \"Add Product\"), __jsx(\"form\", {\n        onSubmit: this.addProduct\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Upload your Product image here\"), __jsx(\"div\", {\n        className: \"upload-img\"\n      }, __jsx(\"span\", null, __jsx(\"i\", {\n        className: \"bx bxs-image-add\"\n      }), \"Click here or drop files to upload\"), __jsx(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        name: \"productImage\",\n        accept: \"image/*\",\n        onChange: this.handleChange\n      })), previewImage ? __jsx(\"div\", {\n        className: \"uploaded-img\"\n      }, __jsx(\"img\", {\n        src: previewImage,\n        alt: \"Image\",\n        className: \"img-thumbnail\"\n      })) : null), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Upload your Product hover image here\"), __jsx(\"div\", {\n        className: \"upload-img\"\n      }, __jsx(\"span\", null, __jsx(\"i\", {\n        className: \"bx bxs-image-add\"\n      }), \"Click here or drop files to upload\"), __jsx(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        name: \"productImageHover\",\n        onChange: this.handleChangeHover\n      })), previewImageHover ? __jsx(\"div\", {\n        className: \"uploaded-img\"\n      }, __jsx(\"img\", {\n        src: previewImageHover,\n        alt: \"Image\",\n        className: \"img-thumbnail\"\n      })) : null), __jsx(\"h4\", {\n        className: \"title\"\n      }, \"Add your Product description and necessary information from here\"), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Name\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            title: e.target.value\n          });\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Description\"), __jsx(\"textarea\", {\n        className: \"form-control\",\n        value: this.state.description,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            description: e.target.value\n          });\n        },\n        rows: \"3\"\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Price\"), __jsx(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.newPrice,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newPrice: e.target.value\n          });\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Offer?\"), __jsx(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            offer: e.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"true\"\n      }, \"Yes\"), __jsx(\"option\", {\n        value: \"false\"\n      }, \"No\"))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Old Price\"), __jsx(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.oldPrice,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            oldPrice: e.target.value\n          });\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"New Product?\"), __jsx(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newProduct: e.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"true\"\n      }, \"Yes\"), __jsx(\"option\", {\n        value: \"false\"\n      }, \"No\"))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"On Sale?\"), __jsx(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            onSale: e.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"true\"\n      }, \"Yes\"), __jsx(\"option\", {\n        value: \"false\"\n      }, \"No\"))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Discount?\"), __jsx(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            discount: e.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"true\"\n      }, \"Yes\"), __jsx(\"option\", {\n        value: \"false\"\n      }, \"No\"))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Discount In Percent (1 or 10 ...)\"), __jsx(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.discountOff,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            discountOff: e.target.value\n          });\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Product Type\"), __jsx(\"select\", {\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            type: e.target.value\n          });\n        }\n      }, __jsx(\"option\", {\n        value: \"T-Shirt\"\n      }, \"T-Shirt\"), __jsx(\"option\", {\n        value: \"Bags\"\n      }, \"Bags\"), __jsx(\"option\", {\n        value: \"Shoes\"\n      }, \"Shoes\"), __jsx(\"option\", {\n        value: \"Women Clothes\"\n      }, \"Women Clothes\"), __jsx(\"option\", {\n        value: \"medical\"\n      }, \"Medical Equipment\"), __jsx(\"option\", {\n        value: \"grocery\"\n      }, \"Grocery\"), __jsx(\"option\", {\n        value: \"electronics\"\n      }, \"Electronics\"), __jsx(\"option\", {\n        value: \"furniture\"\n      }, \"Furniture\"), __jsx(\"option\", {\n        value: \"jewelry\"\n      }, \"Jewelry\"))), __jsx(\"div\", {\n        className: \"modal-btn\"\n      }, __jsx(\"div\", {\n        className: \"btn optional-btn float-left\",\n        onClick: this.closeModal\n      }, \"Cancel\"), __jsx(\"button\", {\n        className: \"btn default-btn float-right\"\n      }, \"Create Product\")))))));\n    }\n  }]);\n\n  return AddProductModal;\n}(Component);\n\nexport default AddProductModal;","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/livani-react-next-ecommerce-template/livani-react/components/Admin/Modals/AddProductModal.js"],"names":["React","Component","toast","firebase","axios","AddProductModal","modal","imageUrl","imageHoverUrl","progress","title","type","description","offer","oldPrice","newPrice","discount","discountOff","onSale","newProduct","previewImage","previewImageHover","state","setState","baseState","props","onClick","e","target","files","image","reader","FileReader","readAsDataURL","onload","result","handleUpload","data","FormData","append","name","post","headers","_boundary","then","response","status","error","code","alert","console","log","fileName","location","imageHover","handleUploadHover","preventDefault","product","Boolean","Number","db","firestore","dbOrderRef","collection","add","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","closeModal","resetForm","active","addProduct","handleChange","handleChangeHover","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport { firebase } from '../../../firebase';\nimport axios from 'axios';\n\nclass AddProductModal extends Component {\n\n    state = {\n        modal: false,\n        imageUrl: '',\n        imageHoverUrl: '',\n        progress: 0,\n        title: '',\n        type: 'T-Shirt',\n        description: '',\n        offer: true,\n        oldPrice: 0,\n        newPrice: 0,\n        discount: true,\n        discountOff: 0,\n        onSale: true,\n        newProduct: true,\n        previewImage: null,\n        previewImageHover: null\n    };\n\n    baseState = this.state \n    resetForm = () => {\n        this.setState(this.baseState)\n    }\n\n    closeModal = () => {\n        this.props.onClick(this.state.modal);\n    }\n\n    handleChange = (e) => {\n        if(e.target.files[0]){\n            let image = e.target.files[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(image);\n            reader.onload = () => {\n                // console.log(reader.result);\n                this.setState({ previewImage: reader.result})\n            }\n            this.handleUpload(image);\n        }\n    }\n\n    handleUpload = (image) => {\n        const data = new FormData();\n        if ( image ) {\n            data.append( 'productImage', image, image.name );\n            axios.post( '/api/upload', data, {\n                headers: {\n                    'accept': 'application/json',\n                    'Accept-Language': 'en-US,en;q=0.8',\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                }\n            })\n            .then( ( response ) => {\n                if ( 200 === response.status ) {\n                    // If file size is larger than expected.\n                    if( response.data.error ) {\n                        if ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\n                            alert( 'Max size: 2MB' );\n                        } else {\n                            console.log( response.data );\n                            // If not the given file type\n                            alert( response.data.error );\n                        }\n                    } else {\n                        // Success\n                        let fileName = response.data;\n                        this.setState({\n                            imageUrl: fileName.location\n                        })\n                        console.log( 'fileName', fileName.location );\n                        // alert( 'File Uploaded', '#3089cf' );\n                    }\n                }\n            }).catch( ( error ) => {\n                // If another error\n                alert( error, 'red' );\n            });\n        } else {\n            // if file not selected throw error\n            alert( 'Please upload file' );\n        }\n    }\n\n    handleChangeHover = (e) => {\n        if(e.target.files[0]){\n            let imageHover = e.target.files[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(imageHover);\n            reader.onload = () => {\n                // console.log(reader.result);\n                this.setState({ previewImageHover: reader.result})\n            }\n            this.handleUploadHover(imageHover);\n        }\n    }\n\n    handleUploadHover = (imageHover) => {\n        const data = new FormData();\n        if ( imageHover ) {\n            data.append( 'productImageHover', imageHover, imageHover.name );\n            axios.post( '/api/upload-hover', data, {\n                headers: {\n                    'accept': 'application/json',\n                    'Accept-Language': 'en-US,en;q=0.8',\n                    'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                }\n            })\n            .then( ( response ) => {\n                if ( 200 === response.status ) {\n                    // If file size is larger than expected.\n                    if( response.data.error ) {\n                        if ( 'LIMIT_FILE_SIZE' === response.data.error.code ) {\n                            alert( 'Max size: 2MB' );\n                        } else {\n                            console.log( response.data );\n                            // If not the given file type\n                            // alert( response.data.error, 'red' );\n                        }\n                    } else {\n                        // Success\n                        let fileName = response.data;\n                        this.setState({\n                            imageHoverUrl: fileName.location\n                        })\n                        // console.log( 'fileName', fileName.location );\n                        // alert( 'File Uploaded', '#3089cf' );\n                    }\n                }\n            }).catch( ( error ) => {\n                // If another error\n                alert( error );\n            });\n        } else {\n            // if file not selected throw error\n            alert( 'Please upload file' );\n        }\n    }\n\n    addProduct = (e) => {\n        e.preventDefault();\n        // console.log(this.state.imageUrl)\n        let { \n            imageUrl, imageHoverUrl, \n            title, type, description, \n            offer, oldPrice, newPrice, \n            discount, discountOff, onSale, newProduct\n        } = this.state;\n        const product = {\n            imageUrl: imageUrl,\n            imageHoverUrl: imageHoverUrl,\n            title: title,\n            type: type,\n            description: description,\n            offer: Boolean(offer),\n            oldPrice: Number(oldPrice),\n            newPrice: Number(newPrice),\n            discount: Boolean(discount),\n            discountOff: Number(discountOff),\n            onSale: Boolean(onSale),\n            newProduct: Boolean(newProduct)\n        };\n        if(title != '' || imageUrl != '' || imageHoverUrl != ''){\n            const db = firebase.firestore();\n            const dbOrderRef = db.collection('products');\n            dbOrderRef.add(product).then(() => {\n                // this.props.resetCart();\n                toast.success('Product has been created successfully.', {\n                    position: \"bottom-left\",\n                    autoClose: 3000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true\n                });\n                // setTimeout(() => {Router.push('/')},3000);  \n                this.closeModal();\n                this.resetForm()\n            });\n        } else {\n            toast.error('Fillup the form', {\n                position: \"bottom-left\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n        }\n    }\n\n    render() {\n        let { previewImage, previewImageHover } = this.state;\n        return (\n            <React.Fragment>\n                <div className={`admin-product-modal ${this.props.active}`}> \n                    <div className=\"modal-innter-content\">\n                        <button type=\"button\" className=\"close\" onClick={this.closeModal}>\n                            <span aria-hidden=\"true\">\n                                <i className='bx bx-x'></i>\n                            </span>\n                        </button>\n\n                        <div className=\"modal-body\">\n                            <h3>Add Product</h3>\n\n                            <form onSubmit={this.addProduct}>\n                                <div className=\"form-group\">\n                                    <label>Upload your Product image here</label>\n                                    <div className=\"upload-img\">\n                                        <span>\n                                            <i className='bx bxs-image-add'></i>\n                                            Click here or drop files to upload \n                                        </span>\n\n                                        <input \n                                            type=\"file\" \n                                            className=\"form-control-file\"\n                                            name=\"productImage\"\n                                            accept=\"image/*\"\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n\n                                    {\n                                        previewImage ? (\n                                        <div className=\"uploaded-img\">\n                                            <img src={previewImage} alt=\"Image\" className=\"img-thumbnail\" />\n                                        </div>\n                                        ) : null\n                                    }\n                                </div>\n \n                                <div className=\"form-group\">\n                                    <label>Upload your Product hover image here</label>\n                                    <div className=\"upload-img\">\n                                        <span>\n                                            <i className='bx bxs-image-add'></i>\n                                            Click here or drop files to upload \n                                        </span>\n\n                                        <input \n                                            type=\"file\" \n                                            className=\"form-control-file\"\n                                            name=\"productImageHover\"\n                                            onChange={this.handleChangeHover}\n                                        />\n                                    </div>\n\n                                    {\n                                        previewImageHover ? (\n                                        <div className=\"uploaded-img\">\n                                            <img src={previewImageHover} alt=\"Image\" className=\"img-thumbnail\" />\n                                        </div>\n                                        ) : null\n                                    }\n                                </div>\n\n                                \n\n                                <h4 className=\"title\">Add your Product description and necessary information from here</h4>\n                                \n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input \n                                        type=\"text\" \n                                        className=\"form-control\" \n                                        value={this.state.title}\n                                        onChange={e => this.setState({title: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Description</label>\n                                    <textarea \n                                        className=\"form-control\" \n                                        value={this.state.description}\n                                        onChange={e => this.setState({description: e.target.value})}\n                                        rows=\"3\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Price</label>\n                                    <input \n                                        type=\"number\" \n                                        className=\"form-control\" \n                                        value={this.state.newPrice}\n                                        onChange={e => this.setState({newPrice: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Offer?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({offer: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Old Price</label>\n                                    <input \n                                        type=\"number\" \n                                        className=\"form-control\" \n                                        value={this.state.oldPrice}\n                                        onChange={e => this.setState({oldPrice: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>New Product?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({newProduct: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>On Sale?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({onSale: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Discount?</label>\n                                    <select \n                                        className=\"form-control\"\n                                        onChange={e => this.setState({discount: e.target.value})}\n                                    >\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Discount In Percent (1 or 10 ...)</label>\n                                    <input \n                                        type=\"number\" \n                                        className=\"form-control\" \n                                        value={this.state.discountOff}\n                                        onChange={e => this.setState({discountOff: e.target.value})}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Product Type</label>\n                                    <select \n                                        className=\"form-control\" \n                                        onChange={e => this.setState({type: e.target.value})}\n                                    >\n                                        <option value=\"T-Shirt\">T-Shirt</option>\n                                        <option value=\"Bags\">Bags</option>\n                                        <option value=\"Shoes\">Shoes</option>\n                                        <option value=\"Women Clothes\">Women Clothes</option>\n                                        <option value=\"medical\">Medical Equipment</option>\n                                        <option value=\"grocery\">Grocery</option>\n                                        <option value=\"electronics\">Electronics</option>\n                                        <option value=\"furniture\">Furniture</option>\n                                        <option value=\"jewelry\">Jewelry</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"modal-btn\">\n                                    <div className=\"btn optional-btn float-left\" onClick={this.closeModal}>Cancel</div>\n                                    <button className=\"btn default-btn float-right\">Create Product</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AddProductModal;"]},"metadata":{},"sourceType":"module"}