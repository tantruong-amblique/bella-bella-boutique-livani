{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport Link from 'next/link';\nimport Payment from '../payments/Payment';\n\nclass CheckoutForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleEmptyForm\", () => {\n      toast.error('Please fillup the form carefully', {\n        position: \"bottom-left\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    });\n  }\n\n  render() {\n    let totalAmount = (this.props.total + this.props.shipping).toFixed(2);\n    let {\n      disabled\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"col-lg-6 col-md-12\"\n    }, __jsx(\"div\", {\n      className: \"order-details\"\n    }, __jsx(\"h3\", {\n      className: \"title\"\n    }, \"Your Order\"), __jsx(\"div\", {\n      className: \"order-table table-responsive\"\n    }, __jsx(\"table\", {\n      className: \"table table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Product Name\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Total\"))), __jsx(\"tbody\", null, this.props.products.map((data, idx) => __jsx(\"tr\", {\n      key: idx\n    }, __jsx(\"td\", {\n      className: \"product-name\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, data.title)), __jsx(\"td\", {\n      className: \"product-total\"\n    }, __jsx(\"span\", {\n      className: \"subtotal-amount\"\n    }, \"$\", data.newPrice * data.quantity)))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"order-subtotal\"\n    }, __jsx(\"span\", null, \"Cart Subtotal\")), __jsx(\"td\", {\n      className: \"order-subtotal-price\"\n    }, __jsx(\"span\", {\n      className: \"order-subtotal-amount\"\n    }, \"$\", this.props.total))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"order-shipping\"\n    }, __jsx(\"span\", null, \"Shipping\")), __jsx(\"td\", {\n      className: \"shipping-price\"\n    }, __jsx(\"span\", null, \"$30\"))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"total-price\"\n    }, __jsx(\"span\", null, \"Order Total\")), __jsx(\"td\", {\n      className: \"product-subtotal\"\n    }, __jsx(\"span\", {\n      className: \"subtotal-amount\"\n    }, \"$\", totalAmount)))))), __jsx(\"div\", {\n      className: \"payment-box\"\n    }, __jsx(\"div\", {\n      className: \"payment-method\"\n    }, __jsx(\"p\", null, __jsx(\"input\", {\n      type: \"radio\",\n      id: \"direct-bank-transfer\",\n      name: \"radio-group\",\n      defaultChecked: true\n    }), __jsx(\"label\", null, \"Direct Order\"), \"Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.\")), disabled ? __jsx(Link, {\n      href: \"#\"\n    }, __jsx(\"a\", {\n      className: disabled ? 'default-btn disabled-btn' : 'default-btn',\n      onClick: e => {\n        e.preventDefault();\n        this.handleEmptyForm();\n      }\n    }, \"Place Order\")) : __jsx(Payment, {\n      amount: totalAmount * 100,\n      userData: this.props.stateData,\n      disabled: disabled\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.addedItems,\n    total: state.total,\n    shipping: state.shipping\n  };\n};\n\nexport default connect(mapStateToProps)(CheckoutForm);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/livani-react-next-ecommerce-template/livani-react/components/Checkout/OrderSummary.js"],"names":["React","Component","connect","toast","Link","Payment","CheckoutForm","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","render","totalAmount","props","total","shipping","toFixed","disabled","products","map","data","idx","title","newPrice","quantity","e","preventDefault","handleEmptyForm","stateData","mapStateToProps","state","addedItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport Link from 'next/link';\nimport Payment from '../payments/Payment';\n\nclass CheckoutForm extends Component {\n    handleEmptyForm = () => {\n        toast.error('Please fillup the form carefully', {\n            position: \"bottom-left\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        });\n    }\n\n    render() {\n        let totalAmount = (this.props.total + this.props.shipping).toFixed(2)\n        let { disabled } = this.props;\n        return (\n            <div className=\"col-lg-6 col-md-12\">\n                <div className=\"order-details\">\n                    <h3 className=\"title\">Your Order</h3>\n\n                    <div className=\"order-table table-responsive\">\n                        <table className=\"table table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Product Name</th>\n                                    <th scope=\"col\">Total</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {this.props.products.map((data, idx) => (\n                                    <tr key={idx}>\n                                        <td className=\"product-name\">\n                                            <a href=\"#\">{data.title}</a>\n                                        </td>\n\n                                        <td className=\"product-total\">\n                                            <span className=\"subtotal-amount\">${data.newPrice * data.quantity}</span>\n                                        </td>\n                                    </tr>\n                                ))}\n                                \n                                <tr>\n                                    <td className=\"order-subtotal\">\n                                        <span>Cart Subtotal</span>\n                                    </td>\n\n                                    <td className=\"order-subtotal-price\">\n                                        <span className=\"order-subtotal-amount\">${this.props.total}</span>\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td className=\"order-shipping\">\n                                        <span>Shipping</span>\n                                    </td>\n\n                                    <td className=\"shipping-price\">\n                                        <span>$30</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"total-price\">\n                                        <span>Order Total</span>\n                                    </td>\n\n                                    <td className=\"product-subtotal\">\n                                        <span className=\"subtotal-amount\">${totalAmount}</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"payment-box\">\n                        <div className=\"payment-method\">\n                            <p>\n                                <input type=\"radio\" id=\"direct-bank-transfer\" name=\"radio-group\" defaultChecked />\n                                <label>Direct Order</label>\n                                Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.\n                            </p>\n                        </div>\n\n                        {\n                            disabled ? (\n                                <Link href=\"#\">\n                                    <a \n                                        className={disabled ? 'default-btn disabled-btn' : 'default-btn'}\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            this.handleEmptyForm();\n                                        }}\n                                    >Place Order</a>\n                                </Link>\n                            ) : (\n                                <Payment \n                                    amount={totalAmount * 100}\n                                    userData={this.props.stateData}\n                                    disabled={disabled}\n                                />\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.addedItems,\n        total: state.total,\n        shipping: state.shipping\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(CheckoutForm)"]},"metadata":{},"sourceType":"module"}