{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from \"axios\";\nimport Router from 'next/router';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { resetCart as _resetCart } from '../../store/actions/cartActions';\nimport { firebase } from '../../firebase';\n\nvar Payments = /*#__PURE__*/function (_React$Component) {\n  _inherits(Payments, _React$Component);\n\n  var _super = _createSuper(Payments);\n\n  function Payments() {\n    var _this;\n\n    _classCallCheck(this, Payments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToken\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n        var body, db, dbOrderRef;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                body = {\n                  customerDetails: {\n                    firstName: _this.props.userData.firstName.value,\n                    lastName: _this.props.userData.lastName.value,\n                    email: _this.props.userData.email.value,\n                    phone: _this.props.userData.phone.value,\n                    address: _this.props.userData.address.value,\n                    city: _this.props.userData.city.value,\n                    state: _this.props.userData.state.value,\n                    zip: _this.props.userData.zip.value\n                  },\n                  items: _objectSpread({}, _this.props.products),\n                  amount: _this.props.total,\n                  status: 'pending',\n                  token: token,\n                  createdAt: new Date()\n                };\n                _context.next = 3;\n                return axios.post(\"/api/checkout\", body);\n\n              case 3:\n                db = firebase.firestore();\n                dbOrderRef = db.collection('orders');\n                dbOrderRef.add(body).then(function () {\n                  _this.props.resetCart();\n\n                  toast.success('Submitted the order, we will contact you soon.', {\n                    position: \"bottom-left\",\n                    autoClose: 3000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true\n                  });\n                  setTimeout(function () {\n                    Router.push('/');\n                  }, 3000);\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Payments, [{\n    key: \"render\",\n    value: function render() {\n      var amount = this.props.amount;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"order-btn\"\n      }, __jsx(StripeCheckout, {\n        name: \"Livani\",\n        description: \"React Next eCommerce Templates\",\n        amount: amount,\n        currency: \"USD\",\n        token: this.onToken,\n        stripeKey: \"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\",\n        billingAddress: false,\n        closed: this.handleClick\n      }, __jsx(\"button\", {\n        disabled: this.props.disabled,\n        className: \"default-btn\"\n      }, \"Place Order\"))));\n    }\n  }]);\n\n  return Payments;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    products: state.addedItems,\n    total: state.total\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    resetCart: function resetCart() {\n      dispatch(_resetCart());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments);","map":{"version":3,"sources":["C:/Users/Eloy/Desktop/livani-react-next-ecommerce-template/livani-react/components/payments/Payment.js"],"names":["React","axios","Router","StripeCheckout","connect","toast","resetCart","firebase","Payments","token","body","customerDetails","firstName","props","userData","value","lastName","email","phone","address","city","state","zip","items","products","amount","total","status","createdAt","Date","post","db","firestore","dbOrderRef","collection","add","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setTimeout","push","onToken","handleClick","disabled","Component","mapStateToProps","addedItems","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\"\nimport Router from 'next/router'\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { resetCart } from '../../store/actions/cartActions';\nimport {firebase} from '../../firebase';\n\nclass Payments extends React.Component {\n    onToken = async token => {\n        const body = {\n            customerDetails: {\n                firstName: this.props.userData.firstName.value,\n                lastName: this.props.userData.lastName.value,\n                email: this.props.userData.email.value,\n                phone: this.props.userData.phone.value,\n                address: this.props.userData.address.value,\n                city: this.props.userData.city.value,\n                state: this.props.userData.state.value,\n                zip: this.props.userData.zip.value\n            },\n            items: {...this.props.products},\n            amount: this.props.total,\n            status: 'pending',\n            token: token,\n            createdAt: new Date()\n        };  \n        await axios.post(\"/api/checkout\", body);\n        const db = firebase.firestore();\n        const dbOrderRef = db.collection('orders');\n        dbOrderRef.add(body).then(() => {\n            this.props.resetCart();\n            toast.success('Submitted the order, we will contact you soon.', {\n                position: \"bottom-left\",\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n            });\n            setTimeout(() => {Router.push('/')},3000);  \n        });\n    };\n\n    render(){\n        let { amount } = this.props;\n        return (\n            <React.Fragment>\n\n                <div className=\"order-btn\">\n                    <StripeCheckout \n                        name=\"Livani\"\n                        description=\"React Next eCommerce Templates\"\n                        amount={amount}\n                        currency=\"USD\"\n                        token={this.onToken}\n                        stripeKey=\"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\"\n                        billingAddress={false}\n                        closed={this.handleClick}\n                    >\n                        <button disabled={this.props.disabled} className={`default-btn`} >\n                            Place Order\n                        </button>\n                    </StripeCheckout>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.addedItems,\n        total: state.total,\n    }\n}\n\nconst mapDispatchToProps= (dispatch)=>{\n    return {\n        resetCart: () => { dispatch(resetCart()) }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Payments)"]},"metadata":{},"sourceType":"module"}